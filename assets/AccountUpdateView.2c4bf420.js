import{_ as p}from"./FinancialAccountForm.50b3b2f1.js";import{N as i,r as f}from"./index.917c111f.js";import{u as h}from"./finance.0403ad60.js";import{e as _,L as g,o,g as n,M as v,u as a,h as L,Q as N,F as b,i as y}from"./vendor.2c85bd1e.js";import"./interceptor.bb9bfcba.js";const F=y("h2",null,"Update account",-1),S={key:0},C={props:{accountId:Number},setup(r){const u=r,e=h(),t=_({account:null,isLoading:!0});e.fetchOneAccount(u.accountId).then(()=>{t.isLoading=!1,t.account=e.selectedAccount});const d=c=>{t.isLoading=!0,e.updateAccount(c).then(()=>{i.notifySuccess("Measurement unit updated"),f.push({path:"/dashboard/finance-management/accounts"})}).catch(()=>i.notifyError("Could not update measurement unit")).finally(()=>t.isLoading=!1)};return(c,s)=>{const l=g("loading");return o(),n(b,null,[F,v((o(),n("div",null,[a(t).account!==null?(o(),n("div",S,[L(p,{account:a(t).account,onSubmit:s[0]||(s[0]=m=>d(m))},null,8,["account"])])):N("",!0)])),[[l,a(t).isLoading]])],64)}}};export{C as default};
