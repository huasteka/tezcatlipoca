import{F as l}from"./FinancialPaymentTypeForm.7f34cc4c.js";import{N as p,r as u}from"./index.917c111f.js";import{u as f}from"./finance.0403ad60.js";import{e as T,L as h,o as a,g as n,M as g,u as o,h as v,Q as _,F,i as L}from"./vendor.2c85bd1e.js";import"./interceptor.bb9bfcba.js";const N=L("h2",null,"Update payment type",-1),P={key:0},x={props:{paymentTypeId:Number},setup(r){const m=r,t=f(),e=T({paymentType:null,isLoading:!0});t.fetchOnePaymentType(m.paymentTypeId).then(()=>{e.isLoading=!1,e.paymentType=t.selectedPaymentType});const y=s=>{e.isLoading=!0,t.updatePaymentType(s).then(()=>{p.notifySuccess("Payment type updated"),u.push({path:"/dashboard/finance-management/payment-types"})}).catch(()=>p.notifyError("Could not update payment type")).finally(()=>e.isLoading=!1)};return(s,i)=>{const c=h("loading");return a(),n(F,null,[N,g((a(),n("div",null,[o(e).paymentType!==null?(a(),n("div",P,[v(l,{paymentType:o(e).paymentType,onSubmit:i[0]||(i[0]=d=>y(d))},null,8,["paymentType"])])):_("",!0)])),[[c,o(e).isLoading]])],64)}}};export{x as default};
