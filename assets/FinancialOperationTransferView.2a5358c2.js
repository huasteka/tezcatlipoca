import{u as N,A as q}from"./Alert.8d9247e8.js";import{u as k}from"./finance.0403ad60.js";import{_ as B,N as D}from"./index.917c111f.js";import{e as V,r as U,f as i,L as C,M as E,u as t,o as u,c as g,w as o,h as l,g as b,W as h,i as L,t as y,l as S,F as v,s as M}from"./vendor.2c85bd1e.js";import"./interceptor.bb9bfcba.js";const R={sourceAccountId:[{required:!0,message:"Please, select the origin account",trigger:"blur"}],targetAccountId:[{required:!0,message:"Please, select the destination account",trigger:"blur"}],paymentTypeId:[{required:!0,message:"Please, select the payment type",trigger:"blur"}],amount:[{required:!0,message:"Please, input the amount to transfer",trigger:"blur"},{type:"number",min:1,message:"Must be greater than zero",trigger:"blur"}]};const z=S("Submit"),W={emits:["submit"],setup(x,{emit:A}){const c=k(),r=V({isLoading:!0,accountList:[],paymentTypeList:[]});Promise.all([c.fetchAccountList(),c.fetchPaymentTypeList()]).then(()=>{r.isLoading=!1,r.accountList=c.accounts,r.paymentTypeList=c.paymentTypes});const m=U(),a=V({amount:0,sourceAccountId:null,targetAccountId:null,paymentTypeId:null}),d=V(R),f=s=>{!s||s.validate(n=>{if(!n)return!1;A("submit",{model:s.model,clearForm:s.resetFields})})};return(s,n)=>{const F=i("el-tag"),I=i("el-option"),T=i("el-select"),p=i("el-form-item"),w=i("el-input-number"),O=i("el-button"),P=i("el-form"),$=C("loading");return E((u(),g(P,{"label-width":"195px",ref_key:"createOperationFormRef",ref:m,model:t(a),rules:t(d)},{default:o(()=>[l(p,{label:"Origin account",prop:"sourceAccountId"},{default:o(()=>[l(T,{class:"small-form-input",placeholder:"Select an account",modelValue:t(a).sourceAccountId,"onUpdate:modelValue":n[0]||(n[0]=e=>t(a).sourceAccountId=e)},{default:o(()=>[(u(!0),b(v,null,h(t(r).accountList,(e,_)=>(u(),g(I,{key:_,label:`${e.name} (${e.code})`,value:e.id},{default:o(()=>[L("span",null,y(e.name),1),l(F,{class:"select-option-icon-position"},{default:o(()=>[S(y(e.code),1)]),_:2},1024)]),_:2},1032,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),l(p,{label:"Destination account",prop:"targetAccountId"},{default:o(()=>[l(T,{class:"small-form-input",placeholder:"Select an account",modelValue:t(a).targetAccountId,"onUpdate:modelValue":n[1]||(n[1]=e=>t(a).targetAccountId=e)},{default:o(()=>[(u(!0),b(v,null,h(t(r).accountList,(e,_)=>(u(),g(I,{key:_,label:`${e.name} (${e.code})`,value:e.id},{default:o(()=>[L("span",null,y(e.name),1),l(F,{class:"select-option-icon-position"},{default:o(()=>[S(y(e.code),1)]),_:2},1024)]),_:2},1032,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),l(p,{label:"Payment type",prop:"paymentTypeId"},{default:o(()=>[l(T,{class:"small-form-input",placeholder:"Select a payment type",modelValue:t(a).paymentTypeId,"onUpdate:modelValue":n[2]||(n[2]=e=>t(a).paymentTypeId=e)},{default:o(()=>[(u(!0),b(v,null,h(t(r).paymentTypeList,(e,_)=>(u(),g(I,{key:_,label:e.name,value:e.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1}),l(p,{label:"Amount",prop:"amount"},{default:o(()=>[l(w,{class:"small-form-input",min:0,modelValue:t(a).amount,"onUpdate:modelValue":n[3]||(n[3]=e=>t(a).amount=e)},null,8,["modelValue"])]),_:1}),l(p,null,{default:o(()=>[l(O,{type:"primary",icon:t(M),onClick:n[4]||(n[4]=e=>f(m.value))},{default:o(()=>[z]),_:1},8,["icon"])]),_:1})]),_:1},8,["model","rules"])),[[$,t(r).isLoading]])}}};var j=B(W,[["__scopeId","data-v-2e6bdf1e"]]);const G=L("h2",null,"Transfer between accounts",-1),Y={setup(x){const A=N(),c=k(),r=({model:m,clearForm:a})=>{c.createTransferOperation(m).then(()=>{D.notifySuccess("A transfer was issued between the origin and destination accounts"),a()}).catch(({response:d})=>{var f,s;return(s=(f=d.data)==null?void 0:f.errors)==null?void 0:s.forEach(n=>A.error(n.message))})};return(m,a)=>(u(),b(v,null,[G,l(q),l(j,{onSubmit:a[0]||(a[0]=d=>r(d))})],64))}};export{Y as default};
