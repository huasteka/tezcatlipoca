var C=Object.defineProperty,w=Object.defineProperties;var G=Object.getOwnPropertyDescriptors;var f=Object.getOwnPropertySymbols;var m=Object.prototype.hasOwnProperty,T=Object.prototype.propertyIsEnumerable;var B=(t,a,e)=>a in t?C(t,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[a]=e,r=(t,a)=>{for(var e in a||(a={}))m.call(a,e)&&B(t,e,a[e]);if(f)for(var e of f(a))T.call(a,e)&&B(t,e,a[e]);return t},n=(t,a)=>w(t,G(a));var o=(t,a)=>{var e={};for(var u in t)m.call(t,u)&&a.indexOf(u)<0&&(e[u]=t[u]);if(t!=null&&f)for(var u of f(t))a.indexOf(u)<0&&T.call(t,u)&&(e[u]=t[u]);return e};import{a as v,d as P}from"./vendor.2c85bd1e.js";import{c as S,u as O}from"./index.917c111f.js";import{s as j}from"./interceptor.bb9bfcba.js";function E(t,a){return{createAccount(e){return t.post("/accounts",e,a)},updateAccount(e){return t.put(`/accounts/${e.id}`,e,a)},deleteAccount(e){return t.delete(`/accounts/${e}`,a)},fetchAccount(e){return t.get(`/accounts/${e}`,a)},fetchAccountList(e=null){let u=r({},a);return e!==null&&(u=n(r({},u),{params:r({},e)})),t.get("/accounts",u)}}}function x(t,a){return{createBudgetGroup(e){return t.post("/budget-groups",e,a)},updateBudgetGroup(e){return t.put(`/budget-groups/${e.id}`,e,a)},deleteBudgetGroup(e){return t.delete(`/budget-groups/${e}`,a)},fetchBudgetGroup(e){return t.get(`/budget-groups/${e}`,a)},fetchBudgetGroupList(e=null){let u=r({},a);return e!==null&&(u=n(r({},u),{params:r({},e)})),t.get("/budget-groups",u)}}}function H(t,a){return{createBudgetCategory(e){return t.post("/budget-categories",e,a)},updateBudgetCategory(e){return t.put(`/budget-categories/${e.id}`,e,a)},deleteBudgetCategory(e){return t.delete(`/budget-categories/${e}`,a)},fetchBudgetCategory(e){return t.get(`/budget-categories/${e}`,a)},fetchBudgetCategoryList(e=null){let u=r({},a);return e!==null&&(u=n(r({},u),{params:r({},e)})),t.get("/budget-categories",u)}}}function D(t,a){return{createAccountDeposit(e){return t.post("/entries/deposit",e,a)},createAccountWithdraw(e){return t.post("/entries/withdraw",e,a)},createAccountTransfer(e){return t.post("/transfers",e,a)},executeEntry(e,u){return t.post(`/entries/${e}/execute`,u,a)},revertEntry(e){return t.delete(`/entries/${e}/reverse`,a)},fetchEntry(e){return t.get(`/entries/${e}`,a)},fetchEntryByCode(e){return t.get(`/entries/search-code/${e}`,a)},fetchEntriesByAccount(e,u=null){let c=r({},a);return u!==null&&(c=n(r({},c),{params:r(r({},c.params),u)})),t.get(`/entries/accounts/${e}`,c)}}}function R(t,a){return{createPaymentType(e){return t.post("/payment-types",e,a)},updatePaymentType(e){return t.put(`/payment-types/${e.id}`,e,a)},deletePaymentType(e){return t.delete(`/payment-types/${e}`,a)},fetchPaymentType(e){return t.get(`/payment-types/${e}`,a)},fetchPaymentTypeList(e=null){let u=r({},a);return e!==null&&(u=n(r({},u),{params:r({},e)})),t.get("/payment-types",u)}}}const i=v.create({baseURL:`${S.yacatecuhtli}/api`});function l(t){return{headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`}}}function W(t){return j(i,t)}function b(t){const a=(e,s)=>{var L=s,{id:u}=L,c=o(L,["id"]);return n(r({},e),{[u]:r({id:u},c)})};return(t||[]).reduce(a,{})}function k(t){return x(i,l(t))}function z(t){return H(i,l(t))}function U(t){return E(i,l(t))}function F(t){return R(i,l(t))}function M(t){return D(i,l(t))}const A=O(),h=A.bearerToken;W(()=>A.logout());const p=k(h),y=z(h),d=U(h),g=F(h),$=M(h),Q=P({id:"yacatecuhtli",state:()=>({operationHistory:[],budgetGroupList:{},budgetCategoryList:{},accountList:{},paymentTypeList:{},selectedBudgetGroup:null,selectedBudgetCategory:null,selectedAccount:null,selectedPaymentType:null}),getters:{budgetCategoriesByGroup:t=>Object.values(t.budgetCategoryList).reduce((a,c)=>{var s=c,{group:e}=s,u=o(s,["group"]);return n(r({},a),{[e.id]:n(r({},e),{categories:[...a[e.id]?a[e.id].categories:[],r({},u)]})})},{}),budgetGroups:t=>Object.values(t.budgetGroupList),budgetCategories:t=>Object.values(t.budgetCategoryList),accounts:t=>Object.values(t.accountList),paymentTypes:t=>Object.values(t.paymentTypeList),history:t=>Object.values(t.operationHistory)},actions:{async fetchBudgetGroupList(t=null){const a=await p.fetchBudgetGroupList(t);this.$patch(e=>e.budgetGroupList=b(a.data.attributes))},async fetchOneBudgetGroup(t){if(this.budgetGroupList[t]){this.$patch(e=>e.selectedBudgetGroup=this.budgetGroupList[t]);return}const{data:a}=await p.fetchBudgetGroup(t);this.$patch(e=>e.selectedBudgetGroup=a.attributes)},async createBudgetGroup({name:t}){const{data:a}=await p.createBudgetGroup({name:t});this.$patch(e=>e.budgetGroupList[a.attributes.id]=a.attributes)},async updateBudgetGroup({id:t,name:a}){const e={id:t,name:a};await p.updateBudgetGroup(e),this.$patch(u=>u.budgetGroupList[t]=e)},async deleteBudgetGroup(t){await p.deleteBudgetGroup(t),this.$patch(a=>delete a.budgetGroupList[t])},async fetchBudgetCategoryList(t=null){const a=await y.fetchBudgetCategoryList(t);this.$patch(e=>e.budgetCategoryList=b(a.data.attributes))},async fetchOneBudgetCategory(t){if(this.budgetCategoryList[t]){this.$patch(e=>e.selectedBudgetCategory=this.budgetCategoryList[t]);return}const{data:a}=await y.fetchBudgetCategory(t);this.$patch(e=>e.selectedBudgetCategory=a.attributes)},async createBudgetCategory({name:t,group:a}){const{data:e}=await y.createBudgetCategory({name:t,group:a});this.$patch(u=>u.budgetCategoryList[e.attributes.id]=e.attributes)},async updateBudgetCategory({id:t,name:a,group:e}){const u={id:t,name:a,group:e};await y.updateBudgetCategory(u),this.$patch(c=>c.budgetCategoryList[t]=u)},async deleteBudgetCategory(t){await y.deleteBudgetCategory(t),this.$patch(a=>delete a.budgetCategoryList[t])},async fetchAccountList(t=null){const a=await d.fetchAccountList(t);this.$patch(e=>e.accountList=b(a.data.attributes))},async fetchOneAccount(t){if(this.accountList[t]){this.$patch(e=>e.selectedAccount=this.accountList[t]);return}const{data:a}=await d.fetchAccount(t);this.$patch(e=>e.selectedAccount=a.attributes)},async createAccount({name:t,code:a}){const{data:e}=await d.createAccount({name:t,code:a});this.$patch(u=>u.accountList[e.attributes.id]=e.attributes)},async updateAccount({id:t,name:a,code:e}){const u={id:t,name:a,code:e};await d.updateAccount(u),this.$patch(c=>c.accountList[t]=u)},async deleteAccount(t){await d.deleteAccount(t),this.$patch(a=>delete a.accountList[t])},async fetchPaymentTypeList(t=null){const a=await g.fetchPaymentTypeList(t);this.$patch(e=>e.paymentTypeList=b(a.data.attributes))},async fetchOnePaymentType(t){if(this.paymentTypeList[t]){this.$patch(e=>e.selectedPaymentType=this.paymentTypeList[t]);return}const{data:a}=await g.fetchPaymentType(t);this.$patch(e=>e.selectedPaymentType=a.attributes)},async createPaymentType({name:t,terms:a,paymentAccount:e}){const{data:u}=await g.createPaymentType({name:t,terms:a,paymentAccount:e});this.$patch(c=>c.paymentTypeList[u.attributes.id]=u.attributes)},async updatePaymentType({id:t,name:a,terms:e,paymentAccount:u}){const c={id:t,name:a,terms:e,paymentAccount:u};await g.updatePaymentType(c),this.$patch(s=>s.paymentTypeList[t]=c)},async deletePaymentType(t){await g.deletePaymentType(t),this.$patch(a=>delete a.paymentTypeList[t])},async fetchOperationHistory(t,a=null){const e=await $.fetchEntriesByAccount(t,a);this.$patch(u=>u.operationHistory=e.data.attributes)},async createDepositOperation(c){var s=c,{category:t,account:a,paymentType:e}=s,u=o(s,["category","account","paymentType"]);await $.createAccountDeposit(r({category:t,account:a,paymentType:e},u))},async createWithdrawOperation(c){var s=c,{category:t,account:a,paymentType:e}=s,u=o(s,["category","account","paymentType"]);await $.createAccountWithdraw(r({category:t,account:a,paymentType:e},u))},async createTransferOperation({sourceAccountId:t,targetAccountId:a,paymentTypeId:e,amount:u}){await $.createAccountTransfer({sourceAccountId:t,targetAccountId:a,paymentTypeId:e,amount:u})}}});export{Q as u};
