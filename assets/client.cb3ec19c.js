var L=Object.defineProperty,m=Object.defineProperties;var I=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable;var o=(t,e,a)=>e in t?L(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,c=(t,e)=>{for(var a in e||(e={}))r.call(e,a)&&o(t,a,e[a]);if(s)for(var a of s(e))u.call(e,a)&&o(t,a,e[a]);return t},d=(t,e)=>m(t,I(e));var C=(t,e)=>{var a={};for(var n in t)r.call(t,n)&&e.indexOf(n)<0&&(a[n]=t[n]);if(t!=null&&s)for(var n of s(t))e.indexOf(n)<0&&u.call(t,n)&&(a[n]=t[n]);return a};import{d as w}from"./vendor.2c85bd1e.js";import{s as y,r as $,f as h,e as D,c as S}from"./index.cefb1522.js";import{u as b}from"./index.917c111f.js";const p=b(),v=p.bearerToken;y(()=>p.logout());const i=S(v),T=w({id:"huitzilopochtli-client",state:()=>({clientList:{},clientIncludedData:{},selectedClient:null}),getters:{clients:t=>Object.values(t.clientList),clientsFixed:t=>Object.values(t.clientList).map(e=>d(c({},e),{id:parseInt(e.id,10)})),clientWithRelationships:t=>{if(t.selectedClient){const e=t.selectedClient.contacts.map(a=>t.clientIncludedData.contacts[a]);return d(c({},t.selectedClient),{contacts:e})}return null}},actions:{async fetchClientList(t=null){const{data:e}=await i.fetchClientList(t);this.$patch(a=>{a.clientList=$(e.data),a.clientIncludedData=h(e.included)})},async fetchOneClient(t){if(this.clientList[t]){this.$patch(a=>a.selectedClient=this.clientList[t]);return}const{data:e}=await i.fetchClient(t);this.$patch(a=>{a.selectedClient=c(c({id:e.data.id},e.data.attributes),D(e.data.relationships)),a.clientIncludedData=h(e.included)})},async createClient({name:t,legal_document_code:e}){const{data:a}=await i.createClient({name:t,legal_document_code:e});return this.$patch(n=>n.clientList[a.data.id]=a.data),a.data.id},async createClientContact(t,e){await i.createClientContact(t,e)},async updateClient({id:t,name:e,legal_document_code:a}){const n={id:t,name:e,legal_document_code:a};return await i.updateClient(n),this.$patch(l=>l.clientList[t]=n),t},async updateClientContact(t,n){var l=n,{id:e}=l,a=C(l,["id"]);await i.createClientContact(t,c({id:e},a)),this.$patch(f=>f.clientIncludedData.contacts[e]=a)},async deleteClient(t){await i.deleteClient(t),this.$patch(e=>delete e.clientList[t])},async deleteClientContact(t,e){await i.deleteClientContact(t,e),this.$patch(a=>delete a.clientIncludedData.contacts[e])}}});export{T as u};
