import{S as m}from"./SalesDeliveryAddressForm.8ae5f3ff.js";import{N as a,r as y}from"./index.917c111f.js";import{u as p}from"./deliveryAddress.de042baf.js";import{e as f,L as A,o as r,g as d,M as h,u as i,h as g,Q as D,F as _,i as S}from"./vendor.2c85bd1e.js";import"./index.cefb1522.js";import"./interceptor.bb9bfcba.js";const L=S("h2",null,"Update delivery address",-1),N={key:0},C={props:{deliveryAddressId:Number},setup(l){const n=l,s=p(),e=f({deliveryAddress:null,isLoading:!0});s.fetchOneDeliveryAddress(n.deliveryAddressId).then(()=>{e.isLoading=!1,e.deliveryAddress=s.selectedDeliveryAddress});const u=t=>{e.isLoading=!0,s.updateDeliveryAddress(t).then(()=>{a.notifySuccess("Delivery address updated"),y.push({path:"/dashboard/sales-management/delivery-addresses"})}).catch(()=>a.notifyError("Could not update delivery address")).finally(()=>e.isLoading=!1)};return(t,o)=>{const c=A("loading");return r(),d(_,null,[L,h((r(),d("div",null,[i(e).deliveryAddress!==null?(r(),d("div",N,[g(m,{deliveryAddress:i(e).deliveryAddress,onSubmit:o[0]||(o[0]=v=>u(v))},null,8,["deliveryAddress"])])):D("",!0)])),[[c,i(e).isLoading]])],64)}}};export{C as default};
